Sử dụng command line để chạy file php:
	Đối với web cron job thì cần phải quen với việc sử dụng chạy PHP bằng command line
	Thường thì trình duyệt thì thường dùng để view web hoặc debug cho nhanh
	php -v: Lệnh kiểm tra version của PHP
	Để chạy được file index thì dùng: php index.php
	php -r '$a = 3; $b1= 10; $r = $a + $b; echo $r' ---> câu lệnh phải được đặt trong dấu ngoặc đơn
	Ngoài ra thì khi chạy php bằng command line thì php nó hỗ trợ 1 biến hệ thống đó là $argv -> nó là 1 mảng
		để debug thì var_dump nó ra, vị trí thứ 0 của nó lúc nào cũng là tên file -> từ vị trí 1 trở lên thì chính là biến
		$argv
		--> Ứng dụng là khi mà khi cần cào dữ liệu riêng của 1 web nào đó thì truyền link vào là được
Giới thiệu về kĩ thuật CURL trong PHP:
	Sử dụng PHP CURL để lấy content của 1 website
	keyword: PHP get content from url
	Khi tiến hành lấy file trên local(chính serve của mình) thì dùng file_get_contents()
	Khi tiến hành lấy Data tại site khác thì sử dụng CURL
		Có chức năng lấy được content của 1 website, download được ảnh, video, và cũng có thể upload được file
	Đối với file_get_contents thì 1 số website nó chặn hàm này, hàm này khá tốn memmory
	CURL lấy content rất nhanh và tiết kiệm RAM
	Không lấy được website sử dụng ajax
Sử dụng CURL phần 1 cơ bản:
	Demo cách lấy dữ liệu của 1 website
	Trải qua 4 bước: Khởi tao, set options, exec và đóng dữ liệu
	Trong trường hợp muốn xem nội dung html thì sử dụng hàm htmlspecialchars()
Sử dụng CURL phần 2 set opt: Nghiên cứu các giá trị options
	Bước set option là bước quan trọng nhất, vì ta lấy dữ liệu của nhiều website nên sẽ xẩy ra rất nhiều các trường hợp, mỗi
		website thì sẽ tiến hành set 1 option khác nhau
	Một số trang web thì nó sẽ check mình dùng trình duyệt nào và máy tính nào
	Để cho nó biết được mình đang dùng trình duyệt nào và máy tính nào thì mình cần set thêm giá trị cho options
	Keyword: what is my user agent
	Option TIMEOUT: Có 2 loại đó là timeout xử lý và timeout connect
	Ngoài ra thì php có 1 timeout nữa đó là timeout của file: set_time_limit(0) -> disabel tính năng timeout đi
	...
Sử dụng CURL phần 3 proxy:
	Kỹ thuật proxy nhằm che giấu địa chỉ IP thật của serve cũng như là của máy tính của ta
	Keyword: proxy list free
	Proxy chỉ sống được trong 1 khoảng time nhất định thôi -> cần tiến hành check xem proxy có còn sống hay không 
Sử dụng CURL phần 4 download file:
	Khi vào các trang có thumnail... thì cần download được các hình ảnh về
Sử dụng CURL phần 5 php curl class:
	Keyword: php curl class
Giới thiệu kĩ thuật dùng để bóc tách dữ liệu:
	Có nhiều cách để lấy dữ liệu(parsing) đó là RegEx, DOM, XPath
	XPath thì hay được sử dụng để parsing XML
	DOM do là hướng đối tượng và trải qua nhiều bước xử lý code, duyệt nhiều vòng for -> tốn RAM hơn nhưng lại dễ hơn
		-> Dùng thư viện DiDOM, ngoài ra thì còn có thư viện Simple HTML DOM nhưng thư viện này ít được sử dụng
		Trong một số trường hợp mới dùng
	Chủ yếu sử dụng RegEx: Kỹ thuật bắt chuỗi bắt những chuỗi cần thiết
	3 bước lấy data: 
		Lấy data của website: Dùng Curl
		Parsing ra những phần cần lấy: Dùng RegEx, DOM, XPath
		Save vào database
Hướng dẫn sử dụng regex phần 1:
	Để so sánh bằng bằng thì cần đặt dấu bắt đầu và kết thúc
	\d: Các số
	\D: Là phủ định của \d
	. : Mọi ký tự(Ký tự bất kỳ)
		/P.P/ -> kết quả có thể là PHP hay PIP...
	\.: Ký tự dấu chấm '.'
	[abc]: Chỉ a, b hoặc c
	[^abc]: Phủ định của [abc], không phải a, b hay c
	[a-z]: Các ký tự từ a->z
	[0-9]: Các ký tự từ 0->9(Tương tự như \d)
	[0-9](3): Hạn chế số lượng ký tự là 3 
	\w: [a-zA-Z0-9]
	\s: Ký tự khoảng trống
	+ : Một hoặc nhiều ký tự liên tiếp(Ký tự có thể xuất hiện 1 lầ hoặc nhiều lần)
		/PH+P/ -> kết quả có thể là PHP, PHHP...
	* : Có hoặc không có(Có thể không có, có 1 hoặc có nhiều)
		/PH*P/ -> kết quả có thể là PP, PHP, PHHP
	? : 0 hoặc là 1(không có ký tự nào hoặc có 1 ký tự)
		/PH?P/ -> kết quả là PP hoặc PHP
	.?: Có thể là 1 ký tự bất kỳ hoặc không phải ký tự nào
		/P.?P/ -> kết quả là PP, PHP, PIP...
	.+: Có thể là 1 hoặc nhiều ký tự
		/P.+P/ -> kết quả là PHP, PIP, PHPPHP, PASP...
	.*: Hoặc không có ký tự nào hoặc là có nhiều ký tự
		/P.*P/ -> Kết quả có thể là PP, PHP, PABP
	.*?: Khắc phục được nhược điểm của .*
		data: 'PHPABCPHPZPHPPHP'
		/P.*P/ -> kết quả là 'PHPABCPHPZPHPPHPPP'
		/P.*?P/ -> kết quả sẽ là: PHP, PHP, PHP, PHP và PP
	{<min>, <max>}: Lấy theo số lượng quy định
		/PH{1,2}P/ -> kết quả là PHP hoặc là PHHP
	(a(bc)): Gom nhóm lại bằng dấu ngoặc tròn
		vd: (AB)+C ---> matches ABC, ABABC, ABABABC, etc.
	(abc|def): | Matches abc or def
	Keyword: php regrex mail, php regrex url
	Các ký tự đăc biệt: $, +, ., ^, *
Hướng dẫn sử dụng regex phần 2:
	Các chức năng chính của Regex là:
		Lấy data từ 1 trang web
		Lấy data từ 1 file text
		Validate dữ liệu
		Via mod_rewrite
Hướng dẫn sử dụng regex phần 3:
	Viết chuỗi Regex hoàn chỉnh để lấy được Email
Xây dựng script get nhạc mp3:
	[, ] đều là các ký tự đặc biệt